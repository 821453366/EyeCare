<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eu.fort.dao.ProImgDao">
    <!-- ProImg的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_ProImg_Map" type="com.eu.fort.entity.ProImg">
        <id column="img_id" property="imgId" />
        <result column="img_url" property="imgUrl" />
        <result column="pro_id" property="proId" />
    </resultMap>

    <!-- 数据库中表名为:pro_img的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="pro_img_Column">
        pro_img.img_id as img_id
        ,pro_img.img_url as img_url
        ,pro_img.pro_id as pro_id
    </sql>

    <!--获得类名为:ProImg对应的数据库表的数据总行数 -->
    <select id="getProImgRowCount" resultType="java.lang.Long">
        select count(img_id) from pro_img
    </select>
    <!-- 获得类名为:ProImg对应数据库中表的数据集合 -->
    <select id="selectProImg" resultMap="result_ProImg_Map">
        select 
        <include refid="pro_img_Column" /> 
        from pro_img
    </select> 

    <!-- 获得一个ProImg对象,以参数ProImg对象中不为空的属性作为条件进行查询-->
    <select id="selectProImgByObj" parameterType="com.eu.fort.entity.ProImg" resultMap="result_ProImg_Map">
        select 
            <include refid="pro_img_Column" /> 
        from pro_img
        <where>
            <if test="proId != null "> and pro_img.pro_id = #{proId}</if>
            <if test="imgUrl != null "> and pro_img.img_url = #{imgUrl}</if>
            <if test="imgId != null "> and pro_img.img_id = #{imgId}</if>
        </where>
    </select> 

    <!-- 通过ProImg的id获得对应数据库中表的数据对象-->
    <select id="selectProImgById" parameterType="java.lang.Integer" resultMap="result_ProImg_Map">
        select 
            <include refid="pro_img_Column" /> 
        from pro_img
        where pro_img.img_id = #{id}
    </select> 

    <!-- 将ProImg插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertProImg" parameterType="com.eu.fort.entity.ProImg">
        insert into pro_img(img_id,img_url,pro_id) 
        values(#{imgId},#{imgUrl},#{proId})
    </insert>

    <!-- 将ProImg中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyProImg" parameterType="com.eu.fort.entity.ProImg">
        insert into pro_img
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="imgId != null">img_id,</if>
            <if test="imgUrl != null">img_url,</if>
            <if test="proId != null">pro_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="imgId != null"> #{imgId},</if>
            <if test="imgUrl != null"> #{imgUrl},</if>
            <if test="proId != null"> #{proId},</if>
        </trim>
    </insert>

    <!-- 通过ProImg的id将数据库表中对应的数据删除-->
    <delete id="deleteProImgById" parameterType="java.lang.Integer">
        delete from pro_img
        where img_id = #{id}
    </delete>

    <!-- 通过ProImg的id将ProImg的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateProImgById" parameterType="com.eu.fort.entity.ProImg">
        update pro_img set
            img_url=#{imgUrl}
            ,pro_id=#{proId}
        where img_id=#{imgId}
    </update>

    <!-- 通过ProImg的id将ProImg中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyProImgById" parameterType="com.eu.fort.entity.ProImg">
        update pro_img
        <set>
            <if test="imgUrl != null">
                img_url=#{imgUrl},
            </if>
            <if test="proId != null">
                pro_id=#{proId},
            </if>
        </set>
        where img_id=#{imgId}
    </update>

</mapper>