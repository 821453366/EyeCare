<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eu.fort.dao.OrderDetailsDao">
    <!-- OrderDetails的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_OrderDetails_Map" type="com.eu.fort.entity.OrderDetails">
        <id column="odetails_id" property="odetailsId" />
        <result column="order_id" property="orderId" />
        <result column="pro_id" property="proId" />
        <result column="odetails_amount" property="odetailsAmount" />
    </resultMap>

    <!-- 数据库中表名为:order_details的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="order_details_Column">
        order_details.odetails_id as odetails_id
        ,order_details.order_id as order_id
        ,order_details.pro_id as pro_id
        ,order_details.odetails_amount as odetails_amount
    </sql>

    <!--获得类名为:OrderDetails对应的数据库表的数据总行数 -->
    <select id="getOrderDetailsRowCount" resultType="java.lang.Long">
        select count(odetails_id) from order_details
    </select>
    <!-- 获得类名为:OrderDetails对应数据库中表的数据集合 -->
    <select id="selectOrderDetails" resultMap="result_OrderDetails_Map">
        select 
        <include refid="order_details_Column" /> 
        from order_details
    </select> 

    <!-- 获得一个OrderDetails对象,以参数OrderDetails对象中不为空的属性作为条件进行查询-->
    <select id="selectOrderDetailsByObj" parameterType="com.eu.fort.entity.OrderDetails" resultMap="result_OrderDetails_Map">
        select 
            <include refid="order_details_Column" /> 
        from order_details
        <where>
            <if test="odetailsAmount != null "> and order_details.odetails_amount = #{odetailsAmount}</if>
            <if test="proId != null "> and order_details.pro_id = #{proId}</if>
            <if test="orderId != null "> and order_details.order_id = #{orderId}</if>
            <if test="odetailsId != null "> and order_details.odetails_id = #{odetailsId}</if>
        </where>
    </select> 

    <!-- 通过OrderDetails的id获得对应数据库中表的数据对象-->
    <select id="selectOrderDetailsById" parameterType="java.lang.Integer" resultMap="result_OrderDetails_Map">
        select 
            <include refid="order_details_Column" /> 
        from order_details
        where order_details.odetails_id = #{id}
    </select> 

    <!-- 将OrderDetails插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertOrderDetails" parameterType="com.eu.fort.entity.OrderDetails">
        insert into order_details(odetails_id,order_id,pro_id,odetails_amount) 
        values(#{odetailsId},#{orderId},#{proId},#{odetailsAmount})
    </insert>

    <!-- 将OrderDetails中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyOrderDetails" parameterType="com.eu.fort.entity.OrderDetails">
        insert into order_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="odetailsId != null">odetails_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="proId != null">pro_id,</if>
            <if test="odetailsAmount != null">odetails_amount,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="odetailsId != null"> #{odetailsId},</if>
            <if test="orderId != null"> #{orderId},</if>
            <if test="proId != null"> #{proId},</if>
            <if test="odetailsAmount != null"> #{odetailsAmount},</if>
        </trim>
    </insert>

    <!-- 通过OrderDetails的id将数据库表中对应的数据删除-->
    <delete id="deleteOrderDetailsById" parameterType="java.lang.Integer">
        delete from order_details
        where odetails_id = #{id}
    </delete>

    <!-- 通过OrderDetails的id将OrderDetails的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateOrderDetailsById" parameterType="com.eu.fort.entity.OrderDetails">
        update order_details set
            order_id=#{orderId}
            ,pro_id=#{proId}
            ,odetails_amount=#{odetailsAmount}
        where odetails_id=#{odetailsId}
    </update>

    <!-- 通过OrderDetails的id将OrderDetails中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyOrderDetailsById" parameterType="com.eu.fort.entity.OrderDetails">
        update order_details
        <set>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
            <if test="proId != null">
                pro_id=#{proId},
            </if>
            <if test="odetailsAmount != null">
                odetails_amount=#{odetailsAmount},
            </if>
        </set>
        where odetails_id=#{odetailsId}
    </update>

</mapper>